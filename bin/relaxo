#!/usr/bin/env ruby

require 'relaxo'
require 'yaml'

OPTIONS = {
	:existing => :merge
}

if ARGV.delete('--merge')
	OPTIONS[:existing] = :merge
elsif ARGV.delete('--replace')
	OPTIONS[:existing] = :replace
elsif ARGV.delete('--update')
	OPTIONS[:existing] = :update
end

$url = ARGV.shift
$database = Relaxo.connect($url)
$stderr.puts "Connecting to #{$url}..."

$documents = YAML::load(ARGF)

unless Array === $documents
	$documents = [$documents]
end

$stats = {
	:saved => 0,
	:errors => 0,
	:total => 0
}

$documents.each do |document|
	begin
		$stderr.puts "Loading #{document[Relaxo::ID]}"
		existing_document = nil
		
		if document && document[Relaxo::ID]
			existing_document = $database.get(document[Relaxo::ID]) rescue nil
		end
		
		if existing_document
			if OPTIONS[:existing] == :replace
				$stderr.puts "Replacing existing document..."
				# The document is replaced entirely with the incoming data.
				document[Relaxo::REV] = existing_document[Relaxo::REV]
			elsif OPTIONS[:existing] == :update
				$stderr.puts "Updating existing document..."
				# Values in `existing_document` take priority
				document.update(existing_document)
			elsif OPTIONS[:existing] == :merge
				$stderr.puts "Merging existing document..."
				# Values in `document` take priority, except for `_rev`.
				document.update(existing_document) do |key, oldval, newval|
					key == Relaxo::REV ? newval : oldval
				end
			end
		end
		
		$stderr.puts "Saving #{document.inspect}"
		$result = $database.save(document)
		
		$stats[:saved] += 1
	rescue RestClient::BadRequest => ex
		$stderr.puts ex.inspect
		
		$stats[:errors] += 1
	end
	
	$stats[:total] += 1
end

$stderr.puts "#{$stats[:saved]} document(s) saved out of #{$stats[:total]}."
if $stats[:errors] > 0
	$stderr.puts "#{$stats[:errors]} errors occurred!"
end
